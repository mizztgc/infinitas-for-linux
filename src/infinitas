#!/bin/bash

# DISCLAIMER:
# This script is in no way affiliated with, endorsed, nor supported by KONAMI. In order to access the full game outside
# of trial mode, you must be subscribed to the beatmania IIDX INFINITAS Basic Course. This script will NOT allow you to
# gain access to things you aren't paying for, nor will the script developer assist you with such actions.
#
# Like most online games today, getting banned for playing the game on GNU/Linux (outside of what the developers
# intended) is a possibility. The script developer is not to be held responsible, should you receive any bans from use of
# this script.
#
# Play at your own risk.

if [[ $UID -eq 0 ]]; then
    echo "This script should not be ran as root."
    exit 127
fi

PREFIX_LOCATION="$HOME/.local/share/infinitas"
ERROR_LABEL="\033[1;91m-> ERROR:\033[0m"
WARN_LABEL="\033[1;91m-> WARNING:\033[0m"

show_error_msgbox() {
	case $XDG_CURRENT_DESKTOP in
		KDE)
			kdialog --title "Infinity Beat - ERROR" --error "Failed to start game:\n$1" 2>/dev/null
			;;
		gnome|GNOME)
			zenity --title "Failed to Launch Game" --error --text "$1" 2>/dev/null
			;;
		*)
			if [[ -n $(which kdialog 2>/dev/null) ]]; then
				export XDG_CURRENT_DESKTOP=KDE; show_error_msgbox "$1"
				return
			fi

			if [[ $(which zenity 2>/dev/null) ]]; then
				export XDG_CURRENT_DESKTOP=gnome; show_error_msgbox "$1"
				return
			fi

			echo "$1" > /dev/pts/0
			return
			;;
	esac
}

#################################################################################################################################
#################################################################################################################################
# -- INSTALL FUNCTION
# -- This function is responsible for creating the Wineprefix and installing IIDX INFINITAS to it, as well as DXVK
# -- and yes, i'm slapping a whole-ass installer in this script. i don't care about what you have to say.

install_cmd() {
	DXVK_LINK="https://github.com/doitsujin/dxvk/releases/download/v2.4/dxvk-2.4.tar.gz"
	INFINITAS_LINK="https://d1rc4pwxnc0pe0.cloudfront.net/v2/installer/infinitas_installer_2022060800.msi"
	VCS2010_LINK="https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe"
	
	TEMP_DIRECTORY="/tmp/infbeat"
	export WINEDLLOVERRIDES="mscoree,mshtml="	# just so wine doesn't try to install mono and gecko

	# installer variables
	INSTALL_LOCATION="$HOME/.local/share/infinitas"
	WINE_EXE=$(which wine 2>/dev/null)
	WINE64_EXE=$(which wine64 2>/dev/null)
	WINEBOOT_EXE=$(which wineboot 2>/dev/null)
	MSIEXTRACT_EXE=$(which msiextract 2>/dev/null)
	WGET_EXE=$(which wget 2>/dev/null)
	TAR_EXE=$(which tar 2>/dev/null)

	show_disclaimer() {
		echo -e "\n\033[1;4;91mDISCLAIMER: READ BEFORE CONTINUING\033[0;1;91m"
cat <<'EOM'

This script is in no way affiliated with, endorsed, nor supported by KONAMI. In order to access the full game outside
of trial mode, you must be subscribed to the beatmania IIDX INFINITAS Basic Course. This script will NOT allow you to
gain access to things you aren't paying for, nor will the script developer assist you with such actions.

Like most online games today, getting banned for playing the game on GNU/Linux (outside of what the developers
intended) is a possibility. The script developer is not to be held responsible, should you receive any bans from use of
this script.

Play at your own risk.
EOM
		echo -e "$disclaimer\033[0m"
		while true; do
			read -p "$(printf "\033[0;1mContinue with the installation\?\033[0m [\033[92mY\033[0m/\033[91mN\033[0m] \033[1;96m")" ch
			if [[ -n "$ch" ]]; then
				if [[ "$ch" == [Yy] || "$ch" == [Yy][Ee][Ss] ]]; then
					echo -en "\033[0m\n\033[92mYou have accepted the disclaimer. Continuing...\033[0m\n"
					break
				elif [[ "$ch" == [Nn] || "$ch" == [Nn][Oo] ]]; then
					echo -en "\033[0m\n\033[92mYou have declined the disclaimer. Quitting...\033[0m\n"
					exit 1
				else
                	echo -e "Invalid option: \033[1m$ch\033[0m"
				fi
			else
				echo -e "Please specify either \033[92myes\033[0m or \033[91mno\033[0m"
			fi
		done
	}

    infinitas_install() {
		echo "Downloading beatmania IIDX INFINITAS installer..."
		$WGET_EXE "$INFINITAS_LINK"
		if [[ $? -ne 0 ]]; then
			echo -e "$ERROR_LABEL to download beatmania IIDX INFINITAS installer!"
			cleanup
			exit 2
		fi

		# extract files from installer and move them to prefix
		echo "Extracting files from beatmania IIDX INFINITAS installer..."
		$MSIEXTRACT_EXE "infinitas_installer_2022060800.msi" > /dev/null
		rm -rf "$TEMP_DIRECTORY/Win"	# remove this dir
		rm -rf "$TEMP_DIRECTORY/Games/beatmania IIDX INFINITAS/DirectX 9.0c Redist" # and this.
		mkdir "$TEMP_DIRECTORY/Games/beatmania IIDX INFINITAS/Resource" # and make this so the game can store data
		mv "$TEMP_DIRECTORY/Games" "$INSTALL_LOCATION/drive_c/Games" # now move it to the prefix

		# add registry keys so the launcher doesn't 5-1601-0013 (no registry keys)
		# obviously have to use wine64 (lulz)
		echo "Applying registry keys..."
		$WINE64_EXE reg add 'HKLM\SOFTWARE\KONAMI\beatmania IIDX INFINITAS' /v 'InstallDir' /t 'REG_SZ' /d 'C:\\Games\\beatmania IIDX INFINITAS\\' /f
		$WINE64_EXE reg add 'HKLM\SOFTWARE\KONAMI\beatmania IIDX INFINITAS' /v 'ResourceDir' /t 'REG_SZ' /d 'C:\\Games\\beatmania IIDX INFINITAS\\Resource\\' /f
	}

	vcr2010_install() {
		echo "Downloading Microsoft Visual C++ Redist 2010..."
		$WGET_EXE "$VCS2010_LINK"
		if [[ $? -ne 0 ]]; then
			echo -e "$ERROR_LABEL Failed to download vcr2010.exe!"
			cleanup
			exit 2
		fi

		echo "Installing Microsoft Visual C++ Redist 2010..."
		$WINE_EXE $TEMP_DIRECTORY/vcredist*.exe '/quiet'
		if [[ $? -ne 0 ]]; then
			echo -e "$ERROR_LABEL Failed to install vcr2010!"
			cleanup
			exit 2
		fi
	}

	dxvk_install() {
		echo "Downloading DXVK..."
		$WGET_EXE "$DXVK_LINK"
		if [[ $? -ne 0 ]]; then
			echo -e "$ERROR_LABEL Failed to download DXVK!"
			cleanup
			exit 2
		fi

		echo "Extracting DXVK archive..."
		$TAR_EXE -zxf "$TEMP_DIRECTORY/dxvk-2.4.tar.gz"

		echo "Moving .dll files..."
		cp -f $TEMP_DIRECTORY/dxvk*/x64/d3d9.dll "$INSTALL_LOCATION/drive_c/windows/system32/"
		cp -f $TEMP_DIRECTORY/dxvk*/x32/d3d9.dll "$INSTALL_LOCATION/drive_c/windows/syswow64/"

		echo "Setting overrides..."
		$WINE64_EXE reg add 'HKCU\Software\Wine\DllOverrides' /v 'd3d9' /d 'native,builtin' /f
		# i'll add these anyways, even though they're unnecessary, since infinitas runs in DX9.0c
		#$WINE64_EXE reg add 'HKCU\Software\Wine\DllOverrides' /v 'd3d10core' /d 'native,builtin' /f > /dev/null
		#$WINE64_EXE reg add 'HKCU\Software\Wine\DllOverrides' /v 'd3d11' /d 'native,builtin' /f > /dev/null
		#$WINE64_EXE reg add 'HKCU\Software\Wine\DllOverrides' /v 'd3xgi' /d 'native,builtin' /f > /dev/null
	}

	set_default_settings() {
		echo "Applying default game settings..."
		mkdir -p "$INSTALL_LOCATION/drive_c/Games/beatmania IIDX INFINITAS/Resource/config/"

cat >> "$INSTALL_LOCATION/drive_c/Games/beatmania IIDX INFINITAS/Resource/config/1000_cf.xml" <<'EOF'
<?xml version="1.0" encoding="utf-8"?>
<SettingDatas xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Parameters>
    <KeyValuePair>
      <Key>
        <string>DisplaySettings</string>
      </Key>
      <Value>
        <string>0</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>AudioPlaySettings</string>
      </Key>
      <Value>
        <string>1</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>FPSSettings</string>
      </Key>
      <Value>
        <string>0</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_1</string>
      </Key>
      <Value>
        <string>256</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_2</string>
      </Key>
      <Value>
        <string>257</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_3</string>
      </Key>
      <Value>
        <string>258</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_4</string>
      </Key>
      <Value>
        <string>259</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_5</string>
      </Key>
      <Value>
        <string>260</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_6</string>
      </Key>
      <Value>
        <string>261</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_7</string>
      </Key>
      <Value>
        <string>262</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_CW</string>
      </Key>
      <Value>
        <string>263</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_CCW</string>
      </Key>
      <Value>
        <string>264</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_E1</string>
      </Key>
      <Value>
        <string>266</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_E2</string>
      </Key>
      <Value>
        <string>265</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_E3</string>
      </Key>
      <Value>
        <string>267</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig1P_E4</string>
      </Key>
      <Value>
        <string>268</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_1</string>
      </Key>
      <Value>
        <string>256</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_2</string>
      </Key>
      <Value>
        <string>257</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_3</string>
      </Key>
      <Value>
        <string>258</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_4</string>
      </Key>
      <Value>
        <string>259</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_5</string>
      </Key>
      <Value>
        <string>260</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_6</string>
      </Key>
      <Value>
        <string>261</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_7</string>
      </Key>
      <Value>
        <string>262</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_CW</string>
      </Key>
      <Value>
        <string>263</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_CCW</string>
      </Key>
      <Value>
        <string>264</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_E1</string>
      </Key>
      <Value>
        <string>265</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_E2</string>
      </Key>
      <Value>
        <string>266</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_E3</string>
      </Key>
      <Value>
        <string>267</string>
      </Value>
    </KeyValuePair>
    <KeyValuePair>
      <Key>
        <string>KeyConfig2P_E4</string>
      </Key>
      <Value>
        <string>268</string>
      </Value>
    </KeyValuePair>
  </Parameters>
</SettingDatas>
EOF
    }

	cleanup() {
		rm -rf $TEMP_DIRECTORY
		wineserver -k
	}

	mkdir -p $INSTALL_LOCATION 2>/dev/null
	export WINEPREFIX="$INSTALL_LOCATION"

	mkdir $TEMP_DIRECTORY
	cd $TEMP_DIRECTORY

	$WINEBOOT_EXE -i 2>/dev/null

    show_disclaimer         # make sure konmai won't sue me for what you do
	infinitas_install		# download the infinitas launcher and install the files
	vcr2010_install			# download and install visual c++ runtime 2010 to the prefix
	dxvk_install			# install dxvk to the prefix
	set_default_settings	# changes game settings to set audio mode to WASAPI (shared) and video mode to automatic
	cleanup					# clean up temp files.

	echo -e "\033[1;92mbeatmania IIDX INFINITAS has been successfully installed!\033[0m"
	exit
}

#################################################################################################################################
#################################################################################################################################
# -- LAUNCH FUNCTION
# -- This function is responsible for starting the launcher, or opening the launch page if no argument is given

launch_cmd() {
	LOGIN_TOKEN="$1"
	WINE_EXECUTABLE=$(which wine 2>/dev/null)
	INFINITAS_LAUNCHER="$PREFIX_LOCATION/drive_c/Games/beatmania IIDX INFINITAS/launcher/modules/bm2dx_launcher.exe"

	validate_prefix() {
		[[ ! -e "$PREFIX_LOCATION" ]] && show_error_msgbox "Couldn't find Wineprefix. Please run '$0 install' in a terminal to install the game." && exit 1
		[[ ! -e "$PREFIX_LOCATION/system.reg" ]] && show_error_msgbox "The Wineprefix is corrupted. Please run '$0 install' in a terminal to reinstall the game." && exit 2
		[[ ! -e "$INFINITAS_LAUNCHER" ]] && show_error_msgbox "Couldn't find beatmania IIDX INFINITAS Launcher. Please run '$0 install' in a terminal to install the game." && exit 3
		export WINEPREFIX="$PREFIX_LOCATION"
		INFINITAS_LAUNCHER="$PREFIX_LOCATION/drive_c/Games/beatmania IIDX INFINITAS/launcher/modules/bm2dx_launcher.exe"
	}

	validate_wine() {
		local v="$($WINE_EXECUTABLE --version)"
		if [[ ${v:5:1} -lt 9 ]]; then
			echo -e "$ERROR_LABEL This script only supports Wine versions 9.0 and later"
			show_error_msgbox "Failed to start game:\nbeatmania IIDX INFINITAS requires Wine 9.0 or later"
			exit 3
		fi
	}

	validate_launch_string() {
    	# Fix the launch string if it's surrounded by quote marks (firefox moment lol).
		[[ "${LOGIN_TOKEN:0:1}" != 'b' ]] && LOGIN_TOKEN="${LOGIN_TOKEN:1:-1}" && echo "fixing login string"
		[[ "${LOGIN_TOKEN:0:11}" != 'bm2dxinf://' ]] && show_error_msgbox "Invalid login string provided" && exit 1
		[[ "${#LOGIN_TOKEN}" -ne 89 && "${#LOGIN_TOKEN}" -ne 91 ]] && show_error_msgbox "Login string provided is an invalid length" && exit 2
		[[ "${LOGIN_TOKEN:85}" != 'rel=' && "${LOGIN_TOKEN:85}" != 'trial=' ]] && show_error_msgbox "Login string contains an unknown mode: ${LOGIN_TOKEN:85:-1}" && exit 3
		return 0
	}

	# check if INFINITAS_USE_GAMESCOPE is set to 1
	# the if statement below will not stop this check
	if [[ -n $INFINITAS_USE_GAMESCOPE && $INFINITAS_USE_GAMESCOPE -eq 1 ]]; then
		if [[ -n $(which gamescope 2>/dev/null) ]]; then
			echo "config: Using gamescope"
			GS_CMD="$(which gamescope) -h 1080 -w 1920 -r 120 --framerate-limit 120 -f --"
			exit # so this script won't try to launch the game again,
		else
			notify-send "Gamescope not found!" -i "infinitas" -a "beatmania IIDX INFINITAS" "Environment variable INFINITAS_USE_GAMESCOPE is set, but gamescope was not found on your system."
        fi
    fi

	# Gamescope blocker
	# This part will terminate gamescope if the script detects it's running within gamescope.
	# Note: if you want to enable gamescope, do so with INFINITAS_USE_GAMESCOPE=1
	if [[ $GAMESCOPE_WAYLAND_DISPLAY || $XDG_CURRENT_DESKTOP == 'gamescope' ]]; then
		echo -e "\n\n\t\033[1;91m !!! DO NOT RUN THIS SCRIPT DIRECTLY THROUGH GAMESCOPE !!!\033[0m\n\n"
		killall -ABRT gamescope-wl
		exit 134
	fi

	# Time check
	# This is absolutely necessary to prevent the player from trying to access the game whenever the e-amusement cloud
	# servers are down for maintenance (between 20:00~22:00 UTC).
	if [[ $(date -u +%l) -ge 20 && $(date -u +%l) -lt 22 ]]; then
		approx_time=$(printf '%(%l:%M%P %Z)T\n' "$(date +%s -u -d "22:00")")
		if [[ "${approx_time:0:1}" == ' ' ]]; then
			approx_time="${approx_time:1}"
		fi
		show_error_msgbox "The e-amusement Cloud servers are currently down for maintenance.\nPlease wait until $approx_time and try again."
		exit 1
	fi

	validate_launch_string
	validate_wine
	validate_prefix

	# set audio settings temporarily
	pw-metadata -n settings 0 clock.force-rate 44100
	pw-metadata -n settings 0 clock.rate 44100
	# if you're having issues, such as DistorteD (i had to) audio, try setting
	# PULSE_LATENCY_MSEC to a value above 40ms.

	# and now we run the game.
	if [[ -n "$GS_CMD" ]]; then
		"$GS_CMD" "$WINE_EXECUTABLE" explorer "/desktop=INFINITAS,1920x1080" "$INFINITAS_LAUNCHER" "$LOGIN_TOKEN" &
	else
		"$WINE_EXECUTABLE" explorer "/desktop=INFINITAS,1920x1080" "$INFINITAS_LAUNCHER" "$LOGIN_TOKEN" &
	fi
	wait			# wait for process to end
	wineserver -k 	# ...and then kill the wineserver
	# reset audio settings back to default values 								
	pw-metadata -n settings 0 clock.force-rate 0
	pw-metadata -n settings 0 clock.rate 0
    exit
}

#################################################################################################################################
#################################################################################################################################
# -- INITIAL FUNCTION
# -- Below is for taking any and all arguments to this script

case "$1" in
	'install')
    	install_cmd
    	;;
	bm2dxinf://*|\'bm2dxinf://*)
		launch_cmd "$1"
		;;
	*)
		exec xdg-open "https://p.eagate.573.jp/game/infinitas/2/api/login/login.html"
		;;
esac
